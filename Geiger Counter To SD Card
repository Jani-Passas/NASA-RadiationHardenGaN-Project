/*
  Counts and records pulses output from MightyOhm Geiger counter.
  Calculates counts per second, minute, and hour (CPS,CPM,and CPH) based on tracking output from
  millis().
*/  
// #include 
#include "SD.h"
#include <Arduino.h>
#include <Wire.h>
#include <Adafruit_INA219.h>
#include <Adafruit_MCP4728.h>

// nInterrupt=0 is for digital pin 2, 1 is for pin 3
const int SDpin=10, nInterrupt=0, interruptPin=2; 
volatile int knt=0, counter=0;
long unsigned int millis_start,M;
int i=1;
int title = 1;

// File logfile;
void setup() {
  Serial.begin(9600);
  if (!SD.begin(SDpin)) {Serial.println("Card failed."); 
    delay(50);exit(0);
  }
  pinMode(interruptPin,INPUT_PULLUP); // built-in resistor.
  attachInterrupt(nInterrupt,isr,RISING); // Start watching.
  millis_start=millis();  
  Serial.print("Starting to run now\n\n");
}
void isr() { // interrupt service routine
  counter = knt;
  knt++; 
  M=millis();
}
void loop() {
  // int test = M-millis_start;
  // Serial.print("Test value is: ");
  // Serial.println(test);
  if (counter!=knt && (M-millis_start)>(10000L*i)){
    RecordGeigerData();
      // File GeigerFile;
      // String Geiger_filename = "Geiger" + String(counter) + ".csv";
      // GeigerFile = SD.open(Geiger_filename, FILE_WRITE);

      // String Geiger_header = "Running Time (s), Running Time (min), Running Time (hours), Counts, CPS, CPM, CPH";
      // String dataRow = String(sec, 2) + "," + String(min, 3) + "," + String(hour, 4) + "," + String(knt) + "," + String(avg_s, 2) + "," + String(avg_m, 3) + "," + String(avg_h, 4);
      
      // GeigerFile.println(Geiger_header);
      // GeigerFile.println(dataRow);

      // Serial.print("\nRunning time is "); Serial.print(sec,2); Serial.print(" seconds");
      // Serial.print("\nRunning time in minutes is "); Serial.print(min,3); Serial.print(" minutes");
      // Serial.print("\nRunning time in hours is "); Serial.print(hour,4); Serial.print(" hours");
      // Serial.print("\nCounts is "); Serial.print(knt);
      // // Serial.print(M); Serial.print(' ');Serial.println(knt);
      // Serial.print("\nRunning average CPS is ");
      // Serial.print(avg_s,2);
      // Serial.print("\nRunning average CPM is ");
      // Serial.print(avg_m,3);
      // Serial.print("\nRunning average CPH is ");
      // Serial.print(avg_h,4);
      // Serial.print("\n");
      // counter++;
      // i++;
  }
}
void RecordGeigerData(){
  double sec = (double(M-millis_start))/1000;
  double min = (double(M-millis_start))/60000;
  double hour = (double(M-millis_start))/3600000;
  double avg_s = knt/sec;
  double avg_m = knt/min;
  double avg_h = knt/hour;
  File GeigerFile;
  // String Geiger_filename = "Geiger" + String(title) + ".csv";
  String Geiger_filename = "Geiger1.csv";
  GeigerFile = SD.open(Geiger_filename, FILE_WRITE);
  String Geiger_header = "Running Time (s), Running Time (min), Running Time (hours), Counts, CPS, CPM, CPH";
  String dataRow = String(sec, 2) + "," + String(min, 3) + "," + String(hour, 4) + "," + String(knt) + "," + String(avg_s, 2) + "," + String(avg_m, 3) + "," + String(avg_h, 4);
      
  if(GeigerFile){
    if(title==1){
      GeigerFile.println(Geiger_header);
      title=2;
    }
    GeigerFile.println(dataRow);
    GeigerFile.close();
    Serial.print("Data written to:");
    Serial.println(Geiger_filename);
  }else{
    Serial.print("Error opening file: " + Geiger_filename);
  }
  Serial.print("\nRunning time is "); Serial.print(sec,2); Serial.print(" seconds");
  Serial.print("\nRunning time in minutes is "); Serial.print(min,3); Serial.print(" minutes");
  Serial.print("\nRunning time in hours is "); Serial.print(hour,4); Serial.print(" hours");
  Serial.print("\nCounts is "); Serial.print(knt);
  // Serial.print(M); Serial.print(' ');Serial.println(knt);
  Serial.print("\nRunning average CPS is ");
  Serial.print(avg_s,2);
  Serial.print("\nRunning average CPM is ");
  Serial.print(avg_m,3);
  Serial.print("\nRunning average CPH is ");
  Serial.print(avg_h,4);
  Serial.print("\n");
  counter++;
  i++;
  // title++;
}
